##############
# Sucesiones #
##############
# Ejemplo 1
a_n <- function(n){n}
a_n(4)
a_n(14)
m <- 10
plot(1:m,a_n(1:m),pch=16,cex=2)
grid()
#
# Ejemplo 2
a_n <- function(n){1/n}
a_n(4)
a_n(14)
plot(1:10,a_n(1:10),pch=16,cex=2)
grid()
a_n(1:30)
a_n(1000)
plot(1:1000,a_n(1:1000),pch=16,cex=2)
grid()
#
# Ejemplo 3
a_n <- function(n){cos(n*pi)}
a_n(4)
a_n(5)
a_n(14)
a_n(15)
plot(1:10,a_n(1:10),pch=16,cex=2)
grid()
a_n(1:30)
a_n(1000)
plot(1:1000,a_n(1:1000),pch=16,cex=2)
grid()
#
# Ejemplo 4
a_n <- function(n){sin(n*pi/2)/n}
a_n(4)
a_n(5)
a_n(14)
a_n(15)
plot(1:10,a_n(1:10),pch=16,cex=2)
grid()
a_n(1:10)
a_n(10000)
plot(1:40,a_n(1:40),pch=16,cex=2)
plot(1:40,a_n(1:40),type = 'l',lwd=5)
grid()
#
# Ejemplo 5
a_n <- function(n){(2/3)^n}
aa_n <- function(n){
aux <- 2/3
for(i in 1:(n-1)){aux <- aux*(2/3)}
aux
}
a_n(4)
aa_n(4)
a_n(5)
aa_n(5)
a_n(14)
aa_n(14)
plot(1:10,a_n(1:10),pch=16,cex=2)
grid()
a_n(1:10)
a_n(1000)
plot(1:40,a_n(1:40),pch=16,cex=2)
plot(1:40,a_n(1:40),type = 'l',lwd=5)
grid()
X0 <- c(1,1)
k <- length(X0)
n <- 10
# M?todo 1
x <- numeric(n+1)
x[1:k] <- X0
for(i in (k+1):(n+1)){ # n debe ser mayor a k
aux <- x[(i-1):(i-k)]*coeficientes # sumandos
x[i] <- sum(aux) #suma final
}
#x
x[n+1]
plot(0:n,x,pch=16)
# M?todo 2
x <- X0
for(j in k:n){
sumandos <- rev(x)*coeficientes
x <- c(x[-1],sum(sumandos))
}
x[k]
# M?todo 3
k_ant <- rev(X0)
x <- sum(k_ant*coeficientes)
for(j in (k+1):n){   #n>=k
k_ant <- c(x,k_ant[-k])
x <- sum(k_ant*coeficientes)
}
x
###########################
# Sucesiones recursivas I #
###########################
coeficientes <- c(1,1)
X0 <- c(1,1)
k <- length(X0)
n <- 10
# M?todo 1
x <- numeric(n+1)
x[1:k] <- X0
# M?todo 1
x <- numeric(n+1)
x[1:k] <- X0
for(i in (k+1):(n+1)){ # n debe ser mayor a k
aux <- x[(i-1):(i-k)]*coeficientes # sumandos
x[i] <- sum(aux) #suma final
}
#x
x[n+1]
plot(0:n,x,pch=16)
# M?todo 2
x <- X0
for(j in k:n){
sumandos <- rev(x)*coeficientes
x <- c(x[-1],sum(sumandos))
}
x[k]
###########################
# Sucesiones recursivas I #
###########################
coeficientes <- c(1,1)
X0 <- c(1,1)
k <- length(X0)
n <- 10
# M?todo 1
x <- numeric(n+1)
x[1:k] <- X0
for(i in (k+1):(n+1)){ # n debe ser mayor a k
aux <- x[(i-1):(i-k)]*coeficientes # sumandos
x[i] <- sum(aux) #suma final
}
#x
x[n+1]
plot(0:n,x,pch=16)
# M?todo 2
x <- X0
for(j in k:n){
sumandos <- rev(x)*coeficientes
x <- c(x[-1],sum(sumandos))
}
x[k]
fibo <- function(n){ #n>2
x <- c(1,1)
j <- 2
while(j<n){
j <- j + 1
x[j] <- x[j-1] + x[j-2]
}
x
}
#EJEMPLO
fibo(19)
#####################################
Recursiva <- function(n,a,x0){# n>k
k <- length(x0)
x <- numeric(n)
x[1:k] <- x0
j <- k
while(j<n){
j <- j + 1
x[j] <- sum(x[(j-1):(j-k)]*a)
}
x
}
#EJEMPLOS
Recursiva(15,c(1,1),c(1,1))
Recursiva(15,c(1,2,3),c(3,7,9))
fibo <- function(n){
if(n>2){
return(fibo(n-1) + fibo(n-2))
}else{
return(1)
}
}
#Ejemplos
fibo(1)
fibo(2)
fibo(3)
fibo(4)
fibo(5)
#Sucesión entera
as.numeric(lapply(1:10,fibo))
plot(as.numeric(lapply(1:10,fibo)),pch=16,cex=3,col=2)
## Tiempo de ejecución
inicio <- proc.time()
as.numeric(lapply(1:30,fibo))
proc.time()-inicio
fibo_turbo <- function(n){ #n>2
x <- c(1,1)
j <- 2
while(j<n){
j <- j + 1
x[j] <- x[j-1] + x[j-2]
}
x
}
#EJEMPLO
inicio <- proc.time()
fibo_turbo(30)
proc.time()-inicio
En <- function(n){ #n>3
x <- c(1,1)
j <- 2
while(j<n){
j <- j + 1
x[j] <- x[j-1] + x[j-2] + 1
}
x
}
En(1)
En(6)
En(30)
En(100)[100]
fibo_turbo(100)
